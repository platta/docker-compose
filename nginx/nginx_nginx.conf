user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log  main;

  sendfile on;

  keepalive_timeout 65;

  # Sample server entry
  # server {
  #   listen 80;
  #   server_name service.yoursite.com;
  #
  #   # Always serve the well-known challenge for renewing certificates.
  #   location /.well-known/acme-challenge/ {
  #     root /var/www/certbot;
  #   }
  #
  #   # Redirect all other HTTP traffic to HTTPS.
  #   location / {
  #     return 301 https://$host$request_uri;
  #   }
  # }
  #
  # server {
  #   listen 443 ssl;
  #   server_name service.yoursite.com;
  #
  #   ssl_certificate /etc/letsencrypt/live/service.yoursite.com/fullchain.pem;
  #   ssl_certificate_key /etc/letsencrypt/live/service.yoursite.com/privkey.pem;
  #
  #   include snippets/authelia.conf;
  #
  #   location / {
  #     proxy_pass http://swarmstack_swarmservice:9000;
  #
  #     include snippets/proxysettings.conf;
  #
  #     include snippets/auth.conf;
  #   }
  # }

  server {
    listen 80;
    server_name auth.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name auth.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/auth.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auth.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://nginx_authelia:9091;
      proxy_set_header Host auth.plattsoft.net;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  server {
    listen 80;
    server_name portainer.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name portainer.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/portainer.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/portainer.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://portainer_portainer:9000;
      proxy_set_header Host portainer.plattsoft.net;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  server {
    listen 80;
    server_name grafana.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name grafana.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/grafana.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/grafana.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://monitoring_grafana:3000;
      proxy_set_header Host grafana.plattsoft.net;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  server {
    listen 80;
    server_name lounge.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name lounge.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/lounge.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lounge.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://lounge;
      proxy_set_header Host lounge;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  server {
    listen 80;
    server_name pihole.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name pihole.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/pihole.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pihole.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://pihole;
      proxy_set_header Host pihole;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  server {
    listen 80;
    server_name homebridge.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name homebridge.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/homebridge.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/homebridge.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://homebridge;
      proxy_set_header Host homebridge;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  server {
    listen 80;
    server_name botpress.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name botpress.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/botpress.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/botpress.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://botpress_server:3000;
      proxy_set_header Host botpress.plattsoft.net;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  # Tor browser via VNC.
  server {
  	listen 80;
    server_name tor.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS.
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name tor.plattsoft.net;

    ssl_certificate /etc/letsencrypt/live/tor.plattsoft.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tor.plattsoft.net/privkey.pem;

    include snippets/authelia.conf;

    location / {
      proxy_pass http://tor_browser:5800;
      proxy_set_header Host tor.plattsoft.net;

      include snippets/proxysettings.conf;

      include snippets/auth.conf;
    }
  }

  # This GitLab container is internal-only.
  server {
  	listen 80;
    server_name gitlab.plattsoft.net;

    location / {
      proxy_pass http://host.docker.internal:8081;
      proxy_set_header Host gitlab.plattsoft.net;

      include snippets/proxysettings.conf;
    }
  }

  server {
  	# This IRC server is only served locally, but needs a real cert.
    listen 80;
    server_name irc.plattsoft.net;

    # Always serve the well-known challenge for renewing certificates.
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
  }
}

stream {
  # Sample server entry
  #
  # server {
  #   listen 9000;
  #   proxy_pass internalhostname:9000;
  # }
}
